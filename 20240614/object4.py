class Calculator:    # def __init__(self, n1, n2):    #     print('[Calculator] __init()__ called!')    #     self.num1 = n1    #     self.num2 = n2    def __init__(self):        print('[Calculator] __init()__ called!')        self.num1 = 10        self.num2 = 100cal = Calculator()print(f'cal.num1: {cal.num1}')print(f'cal.num2: {cal.num2}')print('---------------------------')class ParentClass:    def __init__(self, pNum1, pNum2):        print('[ParentClass] __init__() called!')        self.pNum1 = pNum1        self.pNum2 = pNum2class ChildClass(ParentClass):    def __init__(self, cNum1, cNum2):        print('[ChildClass] __init__() called!')        # 상위클래스의 속성 초기화        # ParentClass.__init__(self, cNum1, cNum2)        super().__init__(cNum1, cNum2)        self.cNum1 = cNum1        self.cNum2 = cNum2cls = ChildClass(10, 20)print('---------------------------')class MidExam:    def __init__(self, s1, s2, s3):        print('[MidExam] __init__() called!')        self.mid_kor_score = s1        self.mid_eng_score = s2        self.mid_mat_score = s3    def printScores(self):        print(f'mid_kor_score: {self.mid_kor_score}')        print(f'mid_eng_score: {self.mid_eng_score}')        print(f'mid_mat_score: {self.mid_mat_score}')class EndExam(MidExam):    def __init__(self, s1, s2, s3, s4, s5, s6):        print('[EndExam] __init__() called!')        super().__init__(s1, s2, s3)        self.end_kor_score = s4        self.end_eng_score = s5        self.end_mat_score = s6    def printScores(self):        super().printScores()        print(f'end_kor_score: {self.end_kor_score}')        print(f'end_eng_score: {self.end_eng_score}')        print(f'end_mat_score: {self.end_mat_score}')    def getTotalScore(self):        total = self.mid_kor_score + self.mid_eng_score + self.mid_mat_score        total += self.end_kor_score + self.end_eng_score + self.end_mat_score        return total    def getAverageScore(self):        return self.getTotalScore() / 6exam = EndExam(85, 90, 88, 75, 85, 95)exam.printScores()print()print(f'Total: {exam.getTotalScore()}')print(f'Average: {round(exam.getAverageScore(), 2)}')print('---------------------------')class Car01:    def drive(self):        print('drive() method called!')class Car02:    def turbo(self):        print('turbo() method called!')class Car03:    def fly(self):        print('fly() method called!')class Car04(Car01, Car02, Car03):    def __init__(self):        passmyCar = Car04()myCar.drive()myCar.turbo()myCar.fly()print('---------------------------')class BasicCalculator:    def add(self, n1, n2):        return n1 + n2    def sub(self, n1, n2):        return n1 - n2    def mul(self, n1, n2):        return n1 * n2    def div(self, n1, n2):        return n1 / n2class DeveloperCalculator:    def mod(self, n1, n2):        return n1 % n2    def flo(self, n1, n2):        return n1 // n2    def exp(self, n1, n2):        return n1 ** n2class NewCalculator(BasicCalculator, DeveloperCalculator):    def __init__(self):        passcal = NewCalculator()print(f'add(): {cal.add(10, 20)}')print(f'sub(): {cal.sub(35, 20)}')print(f'mul(): {cal.mul(20, 20)}')print(f'mod(): {cal.mod(100, 7)}')print(f'flo(): {cal.flo(256, 4)}')print(f'exp(): {cal.exp(2, 4)}')